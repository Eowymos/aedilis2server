using System;
using Server.Items;

namespace Server.Engines.Craft
{
    public class DefAllSpellCrafting : CraftSystem
    {
        public override SkillName MainSkill
        {
            get { return SkillName.Alchemy; }
        }

        public override int GumpTitleNumber
        {
            get { return 0; } // <CENTER>TAILORING MENU</CENTER>
        }

        public override string GumpTitleString
        {
            get { return "<basefont color=#FFFFFF><CENTER>All Spell Crafting</CENTER></basefont>"; }
        }

        private static CraftSystem m_CraftSystem;

        public static CraftSystem CraftSystem
        {
            get
            {
                if (m_CraftSystem == null)
                    m_CraftSystem = new DefAllSpellCrafting();

                return m_CraftSystem;
            }
        }

        public override CraftECA ECA { get { return CraftECA.ChanceMinusSixtyToFourtyFive; } }

        public override double GetChanceAtMin(CraftItem item)
        {
            return 0.5; // 50%
        }

		private DefAllSpellCrafting() : base( 1, 1, 1.25 )// base( 1, 1, 3.0 )
		{
		}

        public override int CanCraft(Mobile from, BaseTool tool, Type itemType)
        {
            if (tool == null || tool.Deleted || tool.UsesRemaining < 0)
                return 1044038; // You have worn out your tool!
            else if (!BaseTool.CheckAccessible(tool, from))
                return 1044263; // The tool must be on your person to use.

            return 0;
        }

        public override void PlayCraftEffect(Mobile from)
        {
            from.PlaySound(0x248);
        }

        public override int PlayEndingEffect(Mobile from, bool failed, bool lostMaterial, bool toolBroken, int quality, bool makersMark, CraftItem item)
        {
            if (toolBroken)
                from.SendLocalizedMessage(1044038); // You have worn out your tool

            if (failed)
            {
                if (lostMaterial)
                    return 1044043; // You failed to create the item, and some of your materials are lost.
                else
                    return 1044157; // You failed to create the item, but no materials were lost.
            }
            else
            {
                if (quality == 0)
                    return 502785; // You were barely able to make this item.  It's quality is below average.
                else if (makersMark && quality == 2)
                    return 1044156; // You create an exceptional quality item and affix your maker's mark.
                else if (quality == 2)
                    return 1044155; // You create an exceptional quality item.
                else
                    return 1044154; // You create the item.
            }
        }

        public override void InitCraftList()
        {
            int index = -1;

            //#region All Spell Crafting Crafting
			AddCraft( typeof( GarlicOrb ), "Mage Essences", "Essence Of Garlic", 90.0, 100.0, typeof( Garlic ), "Garlic", 100, "You don't have enough Garlic." );
			AddCraft( typeof( SpidersSilkOrb ), "Mage Essences", "Essence Of Spider's Silk", 90.0, 100.0, typeof( SpidersSilk ), "Spider's Silk", 100, "You don't have enough Spider's Silk."  );
			AddCraft( typeof( SulfurousAshOrb ), "Mage Essences", "Essence Of  Sulfurous Ash", 90.0, 100.0, typeof( SulfurousAsh ), "Sulfurous Ash", 100, "You don't have enough Sulfurous Ash."  );
			AddCraft( typeof( GinsengOrb ), "Mage Orbs", "Essence Of  Ginseng", 90.0, 100.0, typeof( Ginseng ), "Ginseng", 100, "You don't have enough Ginseng."  );
			AddCraft( typeof( BlackPearlOrb ), "Mage Essences", "Essence Of  Black Pearl", 90.0, 100.0, typeof( BlackPearl ), "Black Pearl", 100, "You don't have enough Black Pearl."  );
			AddCraft( typeof( MandrakeOrb ), "Mage Essences", "Essence Of  Mandrake", 90.0, 100.0, typeof( MandrakeRoot ), "Mandrake Root", 100, "You don't have enough Mandrake Root."  );
			AddCraft( typeof( BloodMossOrb ), "Mage Essences", "Essence Of  Blood Moss", 90.0, 100.0, typeof( Bloodmoss ), "Bloodmoss", 100, "You don't have enough Blood Moss."  );
			AddCraft( typeof( NightshadeOrb ), "Mage Essences", "Essence Of  Night Shade", 90.0, 100.0, typeof( Nightshade ), "Nightshade", 100, "You don't have enough Nightshade."  );
			
			AddCraft( typeof( LevelOneRunicCondenser ), "Runic Condensers", "Level One Runic Condenser", 90.0, 100.0, typeof( GarlicOrb ), "Essence Of Garlic", 1, "You don't have enough essence." );
			AddRes( index, typeof(SpidersSilkOrb), "Essence Of Spider Silk", 1, "You don't have enough essence.");
			AddRes( index, typeof(SulfurousAshOrb), "Essence Of Sulfurous Ash", 1, "You don't have enough essence.");

			AddCraft( typeof( LevelTwoRunicCondenser ), "Runic Condensers", "Level Two Runic Condenser", 90.0, 100.0, typeof( GinsengOrb ), "Essence Of Ginseng", 1, "You don't have enough essence." );
			AddRes( index, typeof( Cloth ), 1044286, 60, 1044287 );
			AddRes( index, typeof(BlackPearlOrb), "Essence Of Black Pearl", 1, "You don't have enough essence.");
			AddRes( index, typeof(MandrakeOrb), "Essence Of Mandrake Root", 1, "You don't have enough essence.");
			AddRes( index, typeof(NightshadeOrb), "Essence Of Night Shade", 1, "You don't have enough essence.");

			AddCraft( typeof( RunicInk ), "All Spells", "Runic Ink", 90.0, 100.0, typeof( LevelOneRunicCondenser ), "Level One Runic Condenser", 1, "You don't have a Runic Condenser." );
			AddRes( index, typeof(LevelTwoRunicCondenser), "Level Two Runic Condenser", 1, "You don't have a Runic Condenser." );
			AddSkill( index, SkillName.Inscribe, 90.0, 100.0 );

            //Reference
            //index = AddCraft(typeof(ArmysPaeonScroll), "Bard Scrolls", "Armys Paeon Scroll", 85.0, 100.0, typeof(BlankScroll), Quanity needed, "You don't have a scroll.");
            //AddRes(index, typeof(GraveDust), 1, "You don't have any grave dust.");
            //AddRes(index, typeof(DaemonBlood), 1, "You don't have any daemon blood.");

            //#endregion
        }
    }
}